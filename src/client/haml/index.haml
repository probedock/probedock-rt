!!!

%html
  %head
    %title= 'Probe Dock RT'

    %meta{http-equiv: 'Content-Type', content: 'text/html; charset=utf-8'}

    -#%link{href: '/css/font-awesome-ie7.min.css', media: 'all', rel: 'stylesheet', type: 'text/css'}
    %link{href: '/css/bootstrap.min.css', media: 'all', rel: 'stylesheet', type: 'text/css'}
    %link{href: '/css/bootstrap-responsive.min.css', media: 'all', rel: 'stylesheet', type: 'text/css'}
    %link{href: '/css/font-awesome.min.css', media: 'all', rel: 'stylesheet', type: 'text/css'}
    %link{href: '/css/style.css', media: 'all', rel: 'stylesheet', type: 'text/css'}

    %script{src: '/socket.io/socket.io.js', type: 'text/javascript'}
    %script{src: '/js/json2.js', type: 'text/javascript'}
    %script{src: '/js/jquery.min.js', type: 'text/javascript'}
    %script{src: '/js/underscore.min.js', type: 'text/javascript'}
    %script{src: '/js/underscore.string.min.js', type: 'text/javascript'}
    %script{src: '/js/keymaster.min.js', type: 'text/javascript'}
    %script{src: '/js/moment.min.js', type: 'text/javascript'}
    %script{src: '/js/bootstrap.min.js', type: 'text/javascript'}
    %script{src: '/js/backbone.min.js', type: 'text/javascript'}
    %script{src: '/js/backbone.marionette.min.js', type: 'text/javascript'}
    %script{src: '/js/backbone.shortcuts.min.js', type: 'text/javascript'}
    %script{src: '/js/backbone.dg.min.js', type: 'text/javascript'}
    %script{src: '/js/client.js', type: 'text/javascript'}

  %body
    .help-box-parent.box#help-ui
      .main-action.help-close{title: 'Close the help'}
        %i.icon-remove-sign
      .help-box-header
      .help-box-container
        .help-box
          %h1 Welcome to Probe Dock RT
          %h4 Lightweight Probe Dock. It will help you in your daily work. Run tests, filter tests, get real time results in this interface.
          %h4 The following instructions will remain on the screen until you receive your first test results.
          %h3 Main user interface
          %hr
          %img(src='/img/ui.png' width='100%')
        .help-box.help-box-spacer
          .help-box-content
            %h3 Interface description
            %hr
            %section
              %h4 1. Summary
              %p The summary consolidates all the results received by Probe Dock RT. You will see the following columns:
              %ul
                %li
                  %strong Version
                  : Version of the project;
                %li
                  %strong Project
                  : The project API ID on Probe Dock if available. If not&nbsp;
                  %code Any
                  &nbsp;is used in place;
                %li
                  %strong Category
                  : The category refers to the type of tests;
                %li
                  %strong Passed, Failed and Inactive
                  : The status of the test results. In the case of&nbsp;
                  %code Inactive
                  &nbsp; the test can be&nbsp;
                  %code Passed
                  &nbsp;or&nbsp;
                  %code Failed
                  ;
                %li
                  %strong All
                  : The total of the test results for the category of test, in a project for the version;
                %li
                  %strong Duration
                  : The total duration of all the test results in the row.
              %p The table is updated each time a result is received. Therefore, the table reflects a state that is always a reflect of your activity.
              %img.help-box-img(src='/img/summary.png' width='100%')
            %hr

            %section
              %h4 2. Squares / Tables
              %p The squares view is a representation of the test results to get in one time the state of project in a version. You can click on squares to see the details.
              %p
                The&nbsp;
                %code Any
                &nbsp;for project and version are placeholders to collect all test results that cannot be identified with a project API ID from Probe Dock.
              %h5 Squares view
              %img.help-box-img(src='/img/squares.png' width='100%')
              %h5 Tables view
            %hr

            %section
              %h4 3. Details
              %p The details view allow you viewing the test result information. You should be able to see stack traces when a test is failing.
              %p You will also have the possibility to view the following test data:
              %ul
                %li
                  %strong Key (k)
                  : If a test key is defined on Probe Dock and assigned to the test;
                %li
                  %strong Fingerprint (fp)
                  : A unique identifier generated by the Probe Dock clients;
                %li
                  %strong Duration
                  : The duration of test execution;
                %li
                  %strong Status
                  : Failed, passed, inactive status of the test execution;
                %li
                  %strong Project API ID and Version
                  : General information about the project;
                %li
                  %strong Name
                  : The test name. This can be for example a humanization of&nbsp;
                  %code class
                  &nbsp;and&nbsp;
                  %code method
                  &nbsp;names in Java test;
                %li
                  %strong Tags and Tickets
                  : List of tags and tickets assigned to the test through the Probe Dock test decoration data.
              %p
                Doing&nbsp;
                %code Alt + Click
                &nbsp; on&nbsp;
                %code Key
                ,&nbsp;
                %code Fingerprint
                ,&nbsp;
                %code Name
                ,&nbsp;
                %code Tag
                &nbsp;or&nbsp;
                %code Ticket
                &nbsp;will activate automatically the related execution filter.
              %img.help-box-img(src='/img/details.png' width='100%')
              %p You can close a test result details at any time by clicking on the cross in the top right corner. To open it again, you can click on the corresponding square in the test result squares.
            %hr

            %section
              %h4 4. View toolbar
              %p This toolbar allow you to filter the data present in the interface. For example, you can show only the failing tests.
              %p There is the list of controls you have at your disposal:
              %ul
                %li
                  %strong Filtering by status
                  : You can filter the tests based on their status&nbsp;
                  %code Inactive
                  ,&nbsp;
                  %code Passed
                  &nbsp;or&nbsp;
                  %code Failed
                  ;
                %li
                  %strong Switching the square vs. table view
                  : The square view is a summary of the status of test results. In the table view, you will have more data available;
                %li
                  %strong Clearing the view filters
                  : You can reset the user interface filters. This will not clear the test results or the execution filters;
                %li
                  %strong Text filter
                  : The text filter can help to filter the test results based on their names or message content.
                %li
                  %strong Reset
                  : The reset button allows will clear all the test results. The execution filters will remains.
              .help-box-center
                %img.help-box-img(src='/img/view-toolbar.png' width='60%')
              %hr

            %section
              %h4 5. Execution toolbar
              %p This toolbar allow you to filter the test at execution time. You define one or more filters that will be used by the Probe Dock clients at runtime to execute only specific tests.
              %p You can filter the tests by: <code>Key (key)</code>, <code>Fingerprint (fp)</code>, <code>code Name (name)</code>, <code>Tag (tag)</code>, <code>Ticket (ticket)</code> or <code>Generic (*)</code>.
              %p
                To use the filters, you have just to enter the text in the text box. By default, the filter will be a <code>Generic</code> filter. To enter another filter, you have to
                fill the text box with this syntax: <code>name:&lt;text&gt;</code>. The filter types are in parenthesis in the previous paragraph.
              %p Once a filter is configured, you can remove it by clicking on it or on the cross in the right of the filter.
              .help-box-center
                %img.help-box-img(src='/img/execution-toolbar.png' width='60%')
              %hr

            %section
              %h4 6. Notifications
              %p During the time the Probe Dock RT interface is open, several notifications will be received such the test run start/end or each test result. Also the status of the connection with the Probe Dock RT agent.
              %p You can dismiss each notification by click on the cross on the top right corner or simply on the notification itself.
              %p You can also acknowledge all the notifications at a time by clicking on the hammer on the top right corner of the notification area.
              %p Finally, by clicking on a key or fingerprint in the test result notifications, you will open the corresponding test details.
              %hr

      .help-box-footer

    .container-fluid.summary-banner#main-ui
      .main-action.help-open{title: 'Show the help'}
        %i.icon-question-sign
      .row-fluid
        %h1 Probe Dock RT
        %hr
      .row-fluid
        .span9
          .summary
          .main
          .details

        .span3
          .tools
            .toolbar.text-right.box
              .toolbar-container
                %form.form-inline.toolbar-form
                  .btn-toolbar.btn-group.toolbar-status{data-toggle: 'buttons-checkbox'}
                    %button.btn.btn-success.active{type: 'button', title: 'Click to hide passed results'}
                      = '&nbsp;'
                      %i.icon-thumbs-up
                      = '&nbsp;'
                    %button.btn.btn-danger.active{type: 'button', title: 'Click to hide failed results'}
                      = '&nbsp;'
                      %i.icon-thumbs-down
                      = '&nbsp;'
                    %button.btn.btn-warning.active{type: 'button', title: 'Click to hide inactive results'}
                      = '&nbsp;'
                      %i.icon-warning-sign
                      = '&nbsp;'
                  .btn-toolbar.btn-group.toolbar-view{data-toggle: 'buttons-radio'}
                    %button.btn.active{type: 'button', title: 'Click to show squares', data-mode: 'squares'}
                      = '&nbsp;'
                      %i.icon-th
                      = '&nbsp;'
                    %button.btn{type: 'button', title: 'Click to show tables', data-mode: 'tables'}
                      = '&nbsp;'
                      %i.icon-table
                      = '&nbsp;'
                  .btn-toolbar.btn-group.toolbar-reset
                    %button.btn.btn-warning{type: 'button', title: 'Click to reset the views'}
                      = '&nbsp;'
                      %i.icon-trash
                      = '&nbsp;'
                  .btn-toolbar.btn-group.text-filter
                    %input.input-large{type: 'text', placeholder: 'text filtering'}
                  .btn-toolbar.btn-group.toolbar-clear
                    %button.btn.btn-danger{type: 'button', title: 'Click to clear all the data'}
                      = '&nbsp;'
                      %i.icon-refresh
                      = '&nbsp;'

            .filters.box
              .filters-container
                %from.form-inline.filters-form.text-center
                  .input-append
                    %input.input-large#filterField{type: 'text', placeholder: 'Execution filters'}
                    %button.btn.filter-add{title: 'Click to add an execution filter'}
                      %i.icon-plus
                      = '&nbsp;'
                    %button.btn.filter-clearall#filterClearAll{title: 'Click to clear all the current execution filters'}
                      %i.icon-trash
                      = '&nbsp;'
                .filter-elements.filter-elements-hide

          .notifications-outer-container.box
            .notifications-inner-container
              %button.notifications-ack{type: 'button', title: 'Click to clear all the notifications'}
                %i.icon-legal
              .notifications-title.text-center
                %h3= 'Notifications'
                .no-notification= 'No notification received'
              .notifications.hide